@use 'sass:meta';

/// Import the default config as the fallback for if
/// the user hasn't yet set a config for their project
@use './src/default-config';

/// Allow user to override the config
$forko-config: default-config.$forko-config !default;
$forko-colors: default-config.$forko-colors !default;
$forko-size-scale: default-config.$forko-size-scale !default;

/// Set default feature flags
$generate-css-vars: true !default;
$generate-utility-classes: true !default;

@use './src/functions/functions' with (
  $forko-colors: $forko-colors,
  $forko-size-scale: $forko-size-scale,
);
@use './src/mixins/mixins';
@use './src/generator/generator' with (
  $forko-config: $forko-config,
  $generate-css-vars: $generate-css-vars,
  $generate-utility-classes: $generate-utility-classes,
);

// @debug ('ðŸ’©ðŸ’©ðŸ’©', $forko-colors);

// Support old features
@if (meta.variable-exists(outputTokenCSS)) {
  @warn '$outputTokenCSS is deprecated. Please use $generate-utility-classes instead';
  $generate-utility-classes: $outputTokenCSS;
}
